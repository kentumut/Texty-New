{"ast":null,"code":"var _jsxFileName = \"/Users/kent/Desktop/alles/programmieren/Texty-New/src/components/settings/ThemeLocalization.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // @mui\n\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles'; // hooks\n\nimport useLocales from '../../hooks/useLocales'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemeLocalization.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default function ThemeLocalization(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const defaultTheme = useTheme();\n  const {\n    currentLang\n  } = useLocales();\n  const theme = createTheme(defaultTheme, currentLang.systemValue);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThemeLocalization, \"mSRU418OgA3fJkRzi3k0IR7tQ40=\", false, function () {\n  return [useTheme, useLocales];\n});\n\n_c = ThemeLocalization;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeLocalization\");","map":{"version":3,"names":["PropTypes","ThemeProvider","createTheme","useTheme","useLocales","ThemeLocalization","propTypes","children","node","isRequired","defaultTheme","currentLang","theme","systemValue"],"sources":["/Users/kent/Desktop/alles/programmieren/Texty-New/src/components/settings/ThemeLocalization.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\n// hooks\nimport useLocales from '../../hooks/useLocales';\n\n// ----------------------------------------------------------------------\n\nThemeLocalization.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default function ThemeLocalization({ children }) {\n  const defaultTheme = useTheme();\n\n  const { currentLang } = useLocales();\n\n  const theme = createTheme(defaultTheme, currentLang.systemValue);\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,sBAArD,C,CACA;;AACA,OAAOC,UAAP,MAAuB,wBAAvB,C,CAEA;;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;EAC5BC,QAAQ,EAAEP,SAAS,CAACQ,IAAV,CAAeC;AADG,CAA9B;AAIA,eAAe,SAASJ,iBAAT,OAAyC;EAAA;;EAAA,IAAd;IAAEE;EAAF,CAAc;EACtD,MAAMG,YAAY,GAAGP,QAAQ,EAA7B;EAEA,MAAM;IAAEQ;EAAF,IAAkBP,UAAU,EAAlC;EAEA,MAAMQ,KAAK,GAAGV,WAAW,CAACQ,YAAD,EAAeC,WAAW,CAACE,WAA3B,CAAzB;EAEA,oBAAO,QAAC,aAAD;IAAe,KAAK,EAAED,KAAtB;IAAA,UAA8BL;EAA9B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GARuBF,iB;UACDF,Q,EAEGC,U;;;KAHFC,iB"},"metadata":{},"sourceType":"module"}