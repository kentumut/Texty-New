{"ast":null,"code":"var _jsxFileName = \"/Users/kent/Desktop/alles/programmieren/Texty-New/src/theme/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useMemo } from \"react\"; // @mui\n\nimport { CssBaseline } from \"@mui/material\";\nimport { createTheme, ThemeProvider as MUIThemeProvider, StyledEngineProvider } from \"@mui/material/styles\"; // hooks\n\nimport useSettings from \"../hooks/useSettings.js\"; //\n\nimport palette from \"./palette\";\nimport typography from \"./typography\";\nimport breakpoints from \"./breakpoints\";\nimport componentsOverride from \"./overrides\";\nimport shadows, { customShadows } from \"./shadows\"; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemeProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default function ThemeProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    themeMode,\n    themeDirection\n  } = useSettings();\n  const isLight = themeMode === \"light\";\n  const themeOptions = useMemo(() => ({\n    palette: isLight ? palette.light : palette.dark,\n    typography,\n    breakpoints,\n    shape: {\n      borderRadius: 8\n    },\n    direction: themeDirection,\n    shadows: isLight ? shadows.light : shadows.dark,\n    customShadows: isLight ? customShadows.light : customShadows.dark\n  }), [isLight, themeDirection]);\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeProvider, \"6nZh1XQ90QqSioSuvGOixUZfSik=\", false, function () {\n  return [useSettings];\n});\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["PropTypes","useMemo","CssBaseline","createTheme","ThemeProvider","MUIThemeProvider","StyledEngineProvider","useSettings","palette","typography","breakpoints","componentsOverride","shadows","customShadows","propTypes","children","node","themeMode","themeDirection","isLight","themeOptions","light","dark","shape","borderRadius","direction","theme","components"],"sources":["/Users/kent/Desktop/alles/programmieren/Texty-New/src/theme/index.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { useMemo } from \"react\";\n// @mui\nimport { CssBaseline } from \"@mui/material\";\nimport {\n  createTheme,\n  ThemeProvider as MUIThemeProvider,\n  StyledEngineProvider,\n} from \"@mui/material/styles\";\n// hooks\nimport useSettings from \"../hooks/useSettings.js\";\n//\nimport palette from \"./palette\";\nimport typography from \"./typography\";\nimport breakpoints from \"./breakpoints\";\nimport componentsOverride from \"./overrides\";\nimport shadows, { customShadows } from \"./shadows\";\n\n// ----------------------------------------------------------------------\n\nThemeProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default function ThemeProvider({ children }) {\n  const { themeMode, themeDirection } = useSettings();\n\n  const isLight = themeMode === \"light\";\n\n  const themeOptions = useMemo(\n    () => ({\n      palette: isLight ? palette.light : palette.dark,\n      typography,\n      breakpoints,\n      shape: { borderRadius: 8 },\n      direction: themeDirection,\n      shadows: isLight ? shadows.light : shadows.dark,\n      customShadows: isLight ? customShadows.light : customShadows.dark,\n    }),\n    [isLight, themeDirection]\n  );\n\n  const theme = createTheme(themeOptions);\n\n  theme.components = componentsOverride(theme);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <MUIThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SACEC,WADF,EAEEC,aAAa,IAAIC,gBAFnB,EAGEC,oBAHF,QAIO,sBAJP,C,CAKA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,aAA/B;AACA,OAAOC,OAAP,IAAkBC,aAAlB,QAAuC,WAAvC,C,CAEA;;;AAEAT,aAAa,CAACU,SAAd,GAA0B;EACxBC,QAAQ,EAAEf,SAAS,CAACgB;AADI,CAA1B;AAIA,eAAe,SAASZ,aAAT,OAAqC;EAAA;;EAAA,IAAd;IAAEW;EAAF,CAAc;EAClD,MAAM;IAAEE,SAAF;IAAaC;EAAb,IAAgCX,WAAW,EAAjD;EAEA,MAAMY,OAAO,GAAGF,SAAS,KAAK,OAA9B;EAEA,MAAMG,YAAY,GAAGnB,OAAO,CAC1B,OAAO;IACLO,OAAO,EAAEW,OAAO,GAAGX,OAAO,CAACa,KAAX,GAAmBb,OAAO,CAACc,IADtC;IAELb,UAFK;IAGLC,WAHK;IAILa,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAhB,CAJF;IAKLC,SAAS,EAAEP,cALN;IAMLN,OAAO,EAAEO,OAAO,GAAGP,OAAO,CAACS,KAAX,GAAmBT,OAAO,CAACU,IANtC;IAOLT,aAAa,EAAEM,OAAO,GAAGN,aAAa,CAACQ,KAAjB,GAAyBR,aAAa,CAACS;EAPxD,CAAP,CAD0B,EAU1B,CAACH,OAAD,EAAUD,cAAV,CAV0B,CAA5B;EAaA,MAAMQ,KAAK,GAAGvB,WAAW,CAACiB,YAAD,CAAzB;EAEAM,KAAK,CAACC,UAAN,GAAmBhB,kBAAkB,CAACe,KAAD,CAArC;EAEA,oBACE,QAAC,oBAAD;IAAsB,WAAW,MAAjC;IAAA,uBACE,QAAC,gBAAD;MAAkB,KAAK,EAAEA,KAAzB;MAAA,wBACE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QADF,EAEGX,QAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA9BuBX,a;UACgBG,W;;;KADhBH,a"},"metadata":{},"sourceType":"module"}